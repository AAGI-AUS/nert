---
title: "Using nert to augment agricultural analytics with SMIPS data"
author: Russell Edson and Max Moldovan
output:
  rmarkdown::html_document
vignette: >
  %\VignetteIndexEntry{Using nert to augment agricultural analytics with SMIPS data}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
  %\VignetteDepends{terra}
  %\VignetteDepends{nlme}
  %\VignetteDepends{ggplot2}
---

<!-- STOP! Do not edit this file. This file is generated from nert_for_agricultural_analytics.Rmd.orig -->

```{r knitrsetup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.width = 7,
  fig.height = 7,
  fig.align = "center",
  fig.path = "vignettes/"
)
```

The **nert** package provides straightforward and seamless access to the TERN
Soil Moisture Integration and Prediction System (SMIPS) datasets, which
include soil moisture estimates that can be used in your data analytics
pipelines. This document showcases this process with the example of a
synthesised multi-site grain production experiment. The **nert** package is
loaded and used to download soil moisture time series data at various
locations across South Australia. Recognising soil moisture as a classical
confounder---affecting crop yield (via root-zone water availability) and
nitrogen treatment (via increased volatilisation in moist soils)---we will
augment our modelling of the grain production to use soil moisture
estimates over the treatment period for estimating the nitrogen treatment
effect.

## A synthetic dataset for a grain production experiment

A simulated dataset containing yield data for a fictitious grain production
experiment has been included with the **nert** package. The dataset is
called `grain`, and you can load the package and this dataset with:

```{r loaddata}
library(nert)
data(grain)
str(grain)
```

The `grain` dataset supposes that a hypothetical grain production experiment has
been run at a selection of ten sites across South Australia, investigating the
effects of four different treatment levels of nitrogen application and three
different seeding rates on the grain yield for some crop with eight varieties.

Note that we have locational coordinates (in `Latitude` and
`Longitude`) for each of the sites, as well as dates for the crop sowing and
nitrogen applications (in `SowDate` and `NitrogenDate` respectively.) This
spatio-temporal information is useful, as it allows us to match up the
experimental sites with the data points that we need to download from SMIPS.

## Download SMIPS data for the sites across times

Here we use the **nert** package to download SMIPS soil moisture datasets
from the TERN Data Portal, which we can use to augment our analysis of
the `grain` experiment data. The two key SMIPS datasets of interest are:

1. `totalbucket`: an estimate of the _volumetric soil moisture_ (in units of mm)
  from the SMIPS bucket moisture store,

1. `SMindex`: the SMIPS _soil moisture index_ (i.e., a number between 0 and 1
  that indicates how full the SMIPS bucket moisture store is relative to
  its 90cm capacity).

For simplicity, suppose we are interested in the SMIPS soil moisture index
(`SMindex`) data, for all days falling between the earliest nitrogen
application date up to 30 days after the last application date, and we want the
soil moisture index at each site (by latitude/longitude coordinates). We can
generate this date range in a straightforward way using the `NitrogenDate`
column of the `grain` dataset as follows:
```{r daterange}
start_date <- min(grain$NitrogenDate)
end_date <- max(grain$NitrogenDate) + 30
date_range <- seq(start_date, end_date, by = "1 day")

c(date_range[1], date_range[length(date_range)])
```

We also need the latitude and longitude for the sites, which we can readily
retrieve from the `grain` dataset columns `Latitude` and `Longitude`:
```{r siteslist}
sites <- unique(grain[, c("Site", "Latitude", "Longitude")])
sites
```

Now TERN supplies the SMIPS daily data rasters as cloud-optimised GeoTIFFs
(or COGs), which contain the soil moisture point predictions across the
entirety of Australia. However, because they are cloud-optimised, we can be
clever in our downloading to make sure that we only download data for the
locations of interest, rather than the entire raster. The **nert** package works
in tandem with the **terra** package to achieve this efficiency:

- First, we download the _information_ for a daily SMIPS raster
    using `nert::read_smips`,
- Then we _extract only the point values we need_, using `terra::extract`.

This leads to a quicker and tighter data download. The below code shows
this process. (Note that `terra::extract` is particular about the order
of the latitude/longitude coordinates: longitude should be specified first,
followed by latitude.)

```{r downloadsmips}
smips_data <- data.frame()
for (i in 1:length(date_range)) {
  r <- read_smips(collection = "SMindex", day = date_range[i])
  smips_points <- terra::extract(
    x = r,
    y = data.frame(lon = sites$Longitude, lat = sites$Latitude),
    xy = TRUE
  )
  names(smips_points)[2] <- "smips_smi_perc"

  smips_data <- rbind(
    smips_data,
    data.frame(
      Date = date_range[i],
      Latitude = smips_points$y,
      Longitude = smips_points$x,
      smips_smi_perc = smips_points$smips_smi_perc
    )
  )
}
head(smips_data)
```

We can add the `Site` column to the `smips_data` to make it easier to use it
in conjunction with the `grain` dataset during the analysis:

```{r addbacksite}
smips_data$Site <- sites$Site
head(smips_data)
```

We are now ready to proceed with the analytics.

## A simple model for grain yield

First, we model the grain yield with a simple model without taking into account
any soil moisture confounding---that is, without reference to the SMIPS data
that we have just downloaded. We will later incorporate the SMIPS data to see
how including the soil moisture as a covariate improves the nitrogen
treatment effect size estimates.

Here we will use the **nlme** package to fit a linear mixed-effect model. The
grain yield `Yield_tha` will be modelled taking the `Variety`, nitrogen
application rate `Nitrogen_kgNha` and seeding rate `SeedRate_plantsm2` as fixed
terms, and incorporating the `Site` and replicate (`Rep`) structure of the
experiment in a random effect term.

```{r simplemodel}
library(nlme)
simple_model <- lme(
  fixed = Yield_Tha ~ Variety * Nitrogen_kgNha * SeedRate_plantsm2,
  random = ~ 1 | Site / Rep,
  data = grain
)
```

We can check the confidence intervals for the effect sizes of the
nitrogen treatments for this simple model:
```{r simplemodeleffects}
simple_model.ints <- intervals(simple_model, which = "fixed")$fixed
simple_model.Neffects <- simple_model.ints[paste0("Nitrogen_kgNha", c(30, 60, 90)), ]
simple_model.Neffects
```

## Augmenting the yield model with soil moisture data

Next, we augment our modelling by including the SMIPS soil moisture data
as a covariate (perhaps anticipating that the soil moisture improves the
yield, but might reduce the effect of nitrogen applied to the soil due
to volatilisation). To keep things simple, for each site (and its
associated nitrogen application date) we take an average of the SMIPS-reported
soil moisture index from the date of the nitrogen application until 30 days
after the application, which we will store in a new column called
`SoilMoisture_avg`.

```{r smipsaverage}
for (site in sites$Site) {
  start_date <- unique(grain[which(grain$Site == site), "NitrogenDate"])[1]
  dates <- seq(start_date, start_date + 30, by = "1 day")
  smips <- smips_data[which(smips_data$Site == site & smips_data$Date %in% dates), ]
  smips_avg <- mean(smips[["smips_smi_perc"]])
  grain[which(grain$Site == site), "SoilMoisture_avg"] <- smips_avg
}
```

We can then add this average soil moisture as a fixed effect to the linear
mixed-effect model:

```{r augmentedmodel}
augmented_model <- lme(
  fixed = Yield_Tha ~ Variety * Nitrogen_kgNha * SeedRate_plantsm2
    + SoilMoisture_avg + SoilMoisture_avg:Nitrogen_kgNha,
  random = ~ 1 | Site / Rep,
  data = grain
)
```

The confidence intervals for the effect sizes of the nitrogen application
treatments for this augmented model are then as follows:

```{r augmentedmodeleffects}
augmented_model.ints <- intervals(augmented_model, which = "fixed")$fixed
augmented_model.Neffects <- augmented_model.ints[paste0("Nitrogen_kgNha", c(30, 60, 90)), ]
augmented_model.Neffects
```

We can use **ggplot2** plotting to graph the confidence intervals for the
simple model versus the augmented model, and illuminate the difference
attained when we include the soil moisture as a confounding term in our
modelling:

```{r ploteffects}
#| fig.height=3, dpi=300, out.width="100%", warning=FALSE, message=FALSE,
#| fig.cap="Nitrogen effect estimates compared between the simple model and
#|   the SMIPS-augmented model."
library(ggplot2)

ci <- rbind(
  data.frame(simple_model.Neffects, model = "Simple Model"),
  data.frame(augmented_model.Neffects, model = "SMIPS-Augmented Model")
)
ci$term <- paste0("Nitrogen_kgNha", c(30, 60, 90))

pd <- position_dodge(-0.4)
ggplot(ci, aes(x = est., y = term, colour = model)) +
  scale_y_discrete(limits = rev) +
  geom_point(position = pd) +
  geom_errorbarh(aes(xmin = lower, xmax = upper), position = pd, height = 0.2) +
  labs(y = "predictor", x = "estimate")
```

From the comparison of the effect sizes for the nitrogen treatment, we can
see that ignoring the effect of soil moisture in the simple model
underestimates the direct nitrogen treatment effect. The augmented model,
in contrast, accounts for the soil moisture and the potential
nitrogen vaporisation that may occur in higher soil moisture conditions.
