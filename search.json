[{"path":[]},{"path":"https://aagi-aus.github.io/nert/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, colour, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://aagi-aus.github.io/nert/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behaviour contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behaviour include: use sexualised language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://aagi-aus.github.io/nert/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behaviour take appropriate fair corrective action response behaviour deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://aagi-aus.github.io/nert/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://aagi-aus.github.io/nert/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behaviour may reported community leaders responsible enforcement adam.sparks@curtin.edu.au. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://aagi-aus.github.io/nert/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://aagi-aus.github.io/nert/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behaviour deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behaviour inappropriate. public apology may requested.","code":""},{"path":"https://aagi-aus.github.io/nert/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behaviour. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://aagi-aus.github.io/nert/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behaviour. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://aagi-aus.github.io/nert/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behaviour, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://aagi-aus.github.io/nert/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://aagi-aus.github.io/nert/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to {nert}","title":"Contributing to {nert}","text":"outlines propose change {nert}.","code":""},{"path":"https://aagi-aus.github.io/nert/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to {nert}","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://aagi-aus.github.io/nert/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to {nert}","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See {tidyverse} guide create great issue advice.","code":""},{"path":"https://aagi-aus.github.io/nert/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to {nert}","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"AAGI-AUS/nert\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://aagi-aus.github.io/nert/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to {nert}","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://aagi-aus.github.io/nert/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to {nert}","text":"Please note {nert} project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://aagi-aus.github.io/nert/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 nert authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://aagi-aus.github.io/nert/articles/nert.html","id":"acquiring-your-tern-api-key","dir":"Articles","previous_headings":"","what":"Acquiring Your TERN API Key","title":"nert","text":"API key required access TERN datasets (including SMIPS) online data portal. {nert} package streamlines data process, still requires authorisation using API key. However, straightforward sign TERN Data Portal acquire API key can use, setting R environment (via .Renviron) can provide {nert} package credential allow convenient access. following steps detail process signing TERN account, generating API key, storing R environment. Either directly navigate TERN Data Discovery Portal (https://portal.tern.org.au/) web browser use nert::get_key() launch web browser TERN website click “Sign ” button appears top-right browser window.  Click Australian Access Federation button sign TERN Data Portal via University ID (alternatively, sign via CILogon Google identity).  signed , click menu top-right name click “TERN Account” entry open account profile.  account profile screen, navigate menu left-hand side, click “Create API key” entry.  screen can create API key accessing TERN Data Portal. Give key whatever name like (e.g., called key “my_API_key” demonstration purposes), click “Request API Key” button.  API key now generated appears string text inside text box page, together key’s creation expiration dates. Copy API key clipboard, sure close browser window successfully stored key locally somewhere won’t see .","code":"library(nert) get_key()"},{"path":[]},{"path":"https://aagi-aus.github.io/nert/articles/nert.html","id":"using-your--renviron-file","dir":"Articles","previous_headings":"Saving Your API Key Locally","what":"Using Your .Renviron File","title":"nert","text":"options saving key locally. straightforward way save directly .Renviron file. secure way store system’s keychain using {keyring} package. Following, demonstrate save API key .Renviron file also, optionally, operating system’s credentials store security. Open .Renviron file. easy way open right file use {usethis} package R session, e.g., usethis::edit_r_environ(). Add new line file store API key variable TERN_API_KEY, ensuring use name {nert} automatically look : TERN_API_KEY='<paste key >'  Save .Renviron file, restart R session change applied. can test {nert} package reading API key properly entering nert::get_key() R command console. API key successfully read {nert}, see API key appear verbatim output.  Finally, can quickly test data download TERN portal working intended downloading test data raster. code downloads SMIPS “totalbucket” soil moisture data raster January 1st, 2024, uses {terra} package’s terra::extract() function get point value soil moisture measurement Adelaide CBD (approximately -34.9285 decimal degrees latitude, 138.6007 longitude): stage {nert} package now working, can use easily download SMIPS datasets TERN Data Portal.","code":"library(nert) library(terra) #> terra 1.8.21 #>  #> Attaching package: 'terra' #> The following object is masked from 'package:knitr': #>  #>     spin  r <- read_smips(day = \"2024-01-01\")  extract(r, xy = TRUE, data.frame(lon = 138.6007, lat = -34.9285)) #>   ID smips_totalbucket_mm_20240101        x         y #> 1  1                      46.07692 138.6037 -34.93254"},{"path":"https://aagi-aus.github.io/nert/articles/nert.html","id":"using-the-keyring-package-for-secure-storage","dir":"Articles","previous_headings":"Saving Your API Key Locally","what":"Using the {keyring} Package for Secure Storage","title":"nert","text":"prefer secure method, can use {keyring} package store API key system’s credential store. don’t {keyring} package installed, can install : ’s installed, can store API key : NERT_API_KEY name key want store keyring. enter actual key value copied TERN website {keyring} prompts . Note specified value API key. Using example , can get SMIPS data Australia Jan 1, 2024 like : Note {nert} re-exports tidyterra::autoplot ease visulalising TERN data. plot SMIPS data Australia 2024-01-01. Repeating example tested API key works, wish fetch data single point points, can specify like using data object, r, , much quicker fetching entire dataset: ’s , ’re set!","code":"install.packages(\"keyring\") library(keyring)  keyring_create(\"nert\")  # add the key to your OS's credential store key_set(\"NERT_API_KEY\", keyring = \"nert\")  # verify that the key was stored properly key_get(\"NERT_API_KEY\", keyring = \"nert\") library(nert) library(keyring)  r <- read_smips(   day = \"2024-01-01\",   api_key = key_get(\"NERT_API_KEY\", keyring = \"nert\") ) library(nert) r <- read_smips(day = \"2024-01-01\") autoplot(r) #> <SpatRaster> resampled to 501270 cells. library(terra)  extract(r, xy = TRUE, data.frame(lon = 138.6007, lat = -34.9285)) #>   ID smips_totalbucket_mm_20240101        x         y #> 1  1                      46.07692 138.6037 -34.93254"},{"path":"https://aagi-aus.github.io/nert/articles/nert_for_agricultural_analytics.html","id":"a-synthetic-dataset-for-a-grain-production-experiment","dir":"Articles","previous_headings":"","what":"A synthetic dataset for a grain production experiment","title":"Using nert to augment agricultural analytics with SMIPS data","text":"simulated dataset containing yield data fictitious grain production experiment included nert package. dataset called grain, can load package dataset : grain dataset supposes hypothetical grain production experiment run selection ten sites across South Australia, investigating effects four different treatment levels nitrogen application three different seeding rates grain yield crop eight varieties. Note locational coordinates (Latitude Longitude) sites, well dates crop sowing nitrogen applications (SowDate NitrogenDate respectively.) spatio-temporal information useful, allows us match experimental sites data points need download SMIPS.","code":"library(nert) data(grain) str(grain) #> 'data.frame':    2880 obs. of  10 variables: #>  $ Site             : Factor w/ 10 levels \"Adelaide\",\"Barossa Valley\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ Latitude         : num  -34.9 -34.9 -34.9 -34.9 -34.9 ... #>  $ Longitude        : num  139 139 139 139 139 ... #>  $ SowDate          : Date, format: \"2022-05-20\" \"2022-05-20\" \"2022-05-20\" ... #>  $ NitrogenDate     : Date, format: \"2022-06-04\" \"2022-06-04\" \"2022-06-04\" ... #>  $ Rep              : Factor w/ 3 levels \"1\",\"2\",\"3\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ Variety          : Factor w/ 8 levels \"Variety_A\",\"Variety_B\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ Nitrogen_kgNha   : Factor w/ 4 levels \"0\",\"30\",\"60\",..: 1 1 1 2 2 2 3 3 3 4 ... #>  $ SeedRate_plantsm2: Factor w/ 3 levels \"75\",\"150\",\"300\": 1 2 3 1 2 3 1 2 3 1 ... #>  $ Yield_Tha        : num  3 3.69 3.89 2.76 3.27 ..."},{"path":"https://aagi-aus.github.io/nert/articles/nert_for_agricultural_analytics.html","id":"download-smips-data-for-the-sites-across-times","dir":"Articles","previous_headings":"","what":"Download SMIPS data for the sites across times","title":"Using nert to augment agricultural analytics with SMIPS data","text":"use nert package download SMIPS soil moisture datasets TERN Data Portal, can use augment analysis grain experiment data. two key SMIPS datasets interest : totalbucket: estimate volumetric soil moisture (units mm) SMIPS bucket moisture store, SMindex: SMIPS soil moisture index (.e., number 0 1 indicates full SMIPS bucket moisture store relative 90cm capacity). simplicity, suppose interested SMIPS soil moisture index (SMindex) data, days falling earliest nitrogen application date 30 days last application date, want soil moisture index site (latitude/longitude coordinates). can generate date range straightforward way using NitrogenDate column grain dataset follows: also need latitude longitude sites, can readily retrieve grain dataset columns Latitude Longitude: Now TERN supplies SMIPS daily data rasters cloud-optimised GeoTIFFs (COGs), contain soil moisture point predictions across entirety Australia. However, cloud-optimised, can clever downloading make sure download data locations interest, rather entire raster. nert package works tandem terra package achieve efficiency: First, download information daily SMIPS raster using nert::read_smips, extract point values need, using terra::extract. leads quicker tighter data download. code shows process. (Note terra::extract particular order latitude/longitude coordinates: longitude specified first, followed latitude.) can add Site column smips_data make easier use conjunction grain dataset analysis: now ready proceed analytics.","code":"start_date <- min(grain$NitrogenDate) end_date <- max(grain$NitrogenDate) + 30 date_range <- seq(start_date, end_date, by = \"1 day\")  c(date_range[1], date_range[length(date_range)]) #> [1] \"2022-05-07\" \"2022-07-15\" sites <- unique(grain[, c(\"Site\", \"Latitude\", \"Longitude\")]) sites #>                    Site  Latitude Longitude #> 1              Adelaide -34.94773  138.6244 #> 289      Barossa Valley -34.54843  138.9580 #> 577        Clare Valley -33.83754  138.6012 #> 865      Eyre Peninsula -34.37378  135.7967 #> 1153 Fleurieu Peninsula -35.52307  138.4608 #> 1441    Kangaroo Island -35.71041  137.0736 #> 1729    Limestone Coast -37.88957  140.6388 #> 2017         Sturt Vale -33.34666  140.0723 #> 2305        Murraylands -35.12425  139.3014 #> 2593    Yorke Peninsula -35.05124  137.2090 smips_data <- data.frame() for (i in 1:length(date_range)) {   r <- read_smips(collection = \"SMindex\", day = date_range[i])   smips_points <- terra::extract(     x = r,     y = data.frame(lon = sites$Longitude, lat = sites$Latitude),     xy = TRUE   )   names(smips_points)[2] <- \"smips_smi_perc\"    smips_data <- rbind(     smips_data,     data.frame(       Date = date_range[i],       Latitude = smips_points$y,       Longitude = smips_points$x,       smips_smi_perc = smips_points$smips_smi_perc     )   ) } head(smips_data) #>         Date  Latitude Longitude smips_smi_perc #> 1 2022-05-07 -34.95253  138.6237     0.25906488 #> 2 2022-05-07 -34.55264  138.9537     0.17677850 #> 3 2022-05-07 -33.83285  138.6037     0.07674548 #> 4 2022-05-07 -34.37270  135.7944     0.53408158 #> 5 2022-05-07 -35.52237  138.4638     0.37496096 #> 6 2022-05-07 -35.71231  137.0741     0.30223876 smips_data$Site <- sites$Site head(smips_data) #>         Date  Latitude Longitude smips_smi_perc               Site #> 1 2022-05-07 -34.95253  138.6237     0.25906488           Adelaide #> 2 2022-05-07 -34.55264  138.9537     0.17677850     Barossa Valley #> 3 2022-05-07 -33.83285  138.6037     0.07674548       Clare Valley #> 4 2022-05-07 -34.37270  135.7944     0.53408158     Eyre Peninsula #> 5 2022-05-07 -35.52237  138.4638     0.37496096 Fleurieu Peninsula #> 6 2022-05-07 -35.71231  137.0741     0.30223876    Kangaroo Island"},{"path":"https://aagi-aus.github.io/nert/articles/nert_for_agricultural_analytics.html","id":"a-simple-model-for-grain-yield","dir":"Articles","previous_headings":"","what":"A simple model for grain yield","title":"Using nert to augment agricultural analytics with SMIPS data","text":"First, model grain yield simple model without taking account soil moisture confounding—, without reference SMIPS data just downloaded. later incorporate SMIPS data see including soil moisture covariate improves nitrogen treatment effect size estimates. use nlme package fit linear mixed-effect model. grain yield Yield_tha modelled taking Variety, nitrogen application rate Nitrogen_kgNha seeding rate SeedRate_plantsm2 fixed terms, incorporating Site replicate (Rep) structure experiment random effect term. can check confidence intervals effect sizes nitrogen treatments simple model:","code":"library(nlme) simple_model <- lme(   fixed = Yield_Tha ~ Variety * Nitrogen_kgNha * SeedRate_plantsm2,   random = ~ 1 | Site / Rep,   data = grain ) simple_model.ints <- intervals(simple_model, which = \"fixed\")$fixed simple_model.Neffects <- simple_model.ints[paste0(\"Nitrogen_kgNha\", c(30, 60, 90)), ] simple_model.Neffects #>                        lower      est.     upper #> Nitrogen_kgNha30 -0.17355028 0.0392950 0.2521403 #> Nitrogen_kgNha60  0.08045472 0.2933000 0.5061453 #> Nitrogen_kgNha90  0.09779306 0.3106383 0.5234836"},{"path":"https://aagi-aus.github.io/nert/articles/nert_for_agricultural_analytics.html","id":"augmenting-the-yield-model-with-soil-moisture-data","dir":"Articles","previous_headings":"","what":"Augmenting the yield model with soil moisture data","title":"Using nert to augment agricultural analytics with SMIPS data","text":"Next, augment modelling including SMIPS soil moisture data covariate (perhaps anticipating soil moisture improves yield, might reduce effect nitrogen applied soil due volatilisation). keep things simple, site (associated nitrogen application date) take average SMIPS-reported soil moisture index date nitrogen application 30 days application, store new column called SoilMoisture_avg. can add average soil moisture fixed effect linear mixed-effect model: confidence intervals effect sizes nitrogen application treatments augmented model follows: can use ggplot2 plotting graph confidence intervals simple model versus augmented model, illuminate difference attained include soil moisture confounding term modelling: Nitrogen effect estimates compared simple model SMIPS-augmented model. comparison effect sizes nitrogen treatment, can see ignoring effect soil moisture simple model underestimates direct nitrogen treatment effect. augmented model, contrast, accounts soil moisture potential nitrogen vaporisation may occur higher soil moisture conditions.","code":"for (site in sites$Site) {   start_date <- unique(grain[which(grain$Site == site), \"NitrogenDate\"])[1]   dates <- seq(start_date, start_date + 30, by = \"1 day\")   smips <- smips_data[which(smips_data$Site == site & smips_data$Date %in% dates), ]   smips_avg <- mean(smips[[\"smips_smi_perc\"]])   grain[which(grain$Site == site), \"SoilMoisture_avg\"] <- smips_avg } augmented_model <- lme(   fixed = Yield_Tha ~ Variety * Nitrogen_kgNha * SeedRate_plantsm2     + SoilMoisture_avg + SoilMoisture_avg:Nitrogen_kgNha,   random = ~ 1 | Site / Rep,   data = grain ) augmented_model.ints <- intervals(augmented_model, which = \"fixed\")$fixed augmented_model.Neffects <- augmented_model.ints[paste0(\"Nitrogen_kgNha\", c(30, 60, 90)), ] augmented_model.Neffects #>                        lower      est.     upper #> Nitrogen_kgNha30 -0.03984861 0.2000454 0.4399395 #> Nitrogen_kgNha60  0.31409573 0.5539898 0.7938838 #> Nitrogen_kgNha90  0.33961765 0.5795117 0.8194058 library(ggplot2)  ci <- rbind(   data.frame(simple_model.Neffects, model = \"Simple Model\"),   data.frame(augmented_model.Neffects, model = \"SMIPS-Augmented Model\") ) ci$term <- paste0(\"Nitrogen_kgNha\", c(30, 60, 90))  pd <- position_dodge(-0.4) ggplot(ci, aes(x = est., y = term, colour = model)) +   scale_y_discrete(limits = rev) +   geom_point(position = pd) +   geom_errorbarh(aes(xmin = lower, xmax = upper), position = pd, height = 0.2) +   labs(y = \"predictor\", x = \"estimate\")"},{"path":"https://aagi-aus.github.io/nert/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adam H. Sparks. Author. Wasin Pipattungsakul. Author. Russell Edson. Author. Sam Rogers. Maintainer, author. Max Moldovan. Author.","code":""},{"path":"https://aagi-aus.github.io/nert/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sparks , Pipattungsakul W, Edson R, Rogers S, Moldovan M (2025). nert: API Client TERN Data. R package version 0.0.1, https://aagi-aus.github.io/nert/.","code":"@Manual{,   title = {nert: An API Client for TERN Data},   author = {Adam H. Sparks and Wasin Pipattungsakul and Russell Edson and Sam Rogers and Max Moldovan},   year = {2025},   note = {R package version 0.0.1},   url = {https://aagi-aus.github.io/nert/}, }"},{"path":"https://aagi-aus.github.io/nert/index.html","id":"nert","dir":"","previous_headings":"","what":"An API Client for TERN Data","title":"An API Client for TERN Data","text":"goal {nert} provide access Australian TERN (Terrestrial Ecosystem Research Network) data R session.","code":""},{"path":"https://aagi-aus.github.io/nert/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An API Client for TERN Data","text":"can install development version {nert} GitHub :","code":"o <- options() # store original options  options(pkg.build_vignettes = TRUE)  if (!require(\"pak\")) {   install.packages(\"pak\") }  pak::pak(\"AAGI-AUS/nert\") options(o) # reset options"},{"path":"https://aagi-aus.github.io/nert/index.html","id":"example-reading-a-cog-as-a-spatial-object","dir":"","previous_headings":"","what":"Example: reading a COG as a spatial object","title":"An API Client for TERN Data","text":"basic example shows can fetch one day’s data SMIPS data (currently supported data set TERN) visualise : plot chunk example_cog","code":"library(nert) r <- read_smips(day = \"2024-01-01\")  # `autoplot` is re-exported from {tidyterra} autoplot(r) #> <SpatRaster> resampled to 501270 cells."},{"path":"https://aagi-aus.github.io/nert/index.html","id":"extract-values-given-latlon-values","dir":"","previous_headings":"","what":"Extract Values Given Lat/Lon Values","title":"An API Client for TERN Data","text":"Extract Soil Moisture Corrigin Merriden, WA Tamworth, NSW given latitude longitude values .","code":"library(terra) #> terra 1.8.42 #>  #> Attaching package: 'terra' #> The following object is masked from 'package:knitr': #>  #>     spin df <- structure(   list(     location = c(\"Corrigin\", \"Merredin\", \"Tamworth\"),     x = c(117.87, 118.28, 150.84),     y = c(-32.33, -31.48, -31.07)   ),   row.names = c(NA, -3L),   class = \"data.frame\" )  cog_df <- extract(x = r, y = df[, c(\"x\", \"y\")], xy = TRUE)  cog_df <- cbind(df$location, cog_df) names(cog_df) <- c(\"location\", \"ID\", \"smips_totalbucket_mm_20240101\", \"x\", \"y\") cog_df #>   location ID smips_totalbucket_mm_20240101        x         y #> 1 Corrigin  1                    0.06715473 117.8688 -32.33328 #> 2 Merredin  2                    0.22716530 118.2787 -31.48353 #> 3 Tamworth  3                   93.44989014 150.8408 -31.07365"},{"path":[]},{"path":"https://aagi-aus.github.io/nert/index.html","id":"dev-container","dir":"","previous_headings":"Development","what":"Dev Container","title":"An API Client for TERN Data","text":"Set container. Run tests check stuff. Render file.","code":"devcontainer up --workspace-folder . devcontainer exec --workspace-folder . R -e \"devtools::check()\" devcontainer exec --workspace-folder . R -e \"devtools::build_readme()\""},{"path":"https://aagi-aus.github.io/nert/index.html","id":"citing-nert","dir":"","previous_headings":"","what":"Citing {nert}","title":"An API Client for TERN Data","text":"cite nert:","code":"citation(\"nert\") #> To cite package 'nert' in publications use: #>  #>   Sparks A, Pipattungsakul W, Edson R, Rogers S, Moldovan M (2025). #>   _nert: An API Client for TERN Data_. R package version 0.0.1, #>   https://github.com/AAGI-AUS/nert, <https://aagi-aus.github.io/nert/>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {nert: An API Client for TERN Data}, #>     author = {Adam H. Sparks and Wasin Pipattungsakul and Russell Edson and Sam Rogers and Max Moldovan}, #>     year = {2025}, #>     note = {R package version 0.0.1, https://github.com/AAGI-AUS/nert}, #>     url = {https://aagi-aus.github.io/nert/}, #>   }"},{"path":"https://aagi-aus.github.io/nert/reference/dot-check_collection_agreement.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Days Requested Align With Collection — .check_collection_agreement","title":"Validate Days Requested Align With Collection — .check_collection_agreement","text":"dates offered collections. checks user inputs sure unavailable dates requested collections provide .","code":""},{"path":"https://aagi-aus.github.io/nert/reference/dot-check_collection_agreement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Days Requested Align With Collection — .check_collection_agreement","text":"","code":".check_collection_agreement(.collection, .day)"},{"path":"https://aagi-aus.github.io/nert/reference/dot-check_collection_agreement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Days Requested Align With Collection — .check_collection_agreement","text":".collection user-supplied SMIPS collection asked . .day user-supplied date asked .","code":""},{"path":"https://aagi-aus.github.io/nert/reference/dot-check_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Check User Input Dates for Validity — .check_date","title":"Check User Input Dates for Validity — .check_date","text":"Check User Input Dates Validity","code":""},{"path":"https://aagi-aus.github.io/nert/reference/dot-check_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check User Input Dates for Validity — .check_date","text":"","code":".check_date(x)"},{"path":"https://aagi-aus.github.io/nert/reference/dot-check_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check User Input Dates for Validity — .check_date","text":"x User entered date value","code":""},{"path":"https://aagi-aus.github.io/nert/reference/dot-check_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check User Input Dates for Validity — .check_date","text":"Validated date string POSIXct object.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/dot-check_date.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check User Input Dates for Validity — .check_date","text":"taken nasapower.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/dot-check_date.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check User Input Dates for Validity — .check_date","text":"Adam H. Sparks adamhsparks@curtin.edu.au","code":""},{"path":"https://aagi-aus.github.io/nert/reference/dot-check_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check User Input Dates for Validity — .check_date","text":"","code":".check_date(\"2024-01-01\") #> Error in .check_date(\"2024-01-01\"): could not find function \".check_date\""},{"path":"https://aagi-aus.github.io/nert/reference/dot-check_not_example_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that the user hasn't blindly copied the ","title":"Check that the user hasn't blindly copied the ","text":"Check user blindly copied \"your_api_key\" string examples","code":""},{"path":"https://aagi-aus.github.io/nert/reference/dot-check_not_example_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that the user hasn't blindly copied the ","text":"","code":".check_not_example_api_key(.api_key)"},{"path":"https://aagi-aus.github.io/nert/reference/dot-make_smips_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an SMIPS URL — .make_smips_url","title":"Create an SMIPS URL — .make_smips_url","text":"Creates SMIPS specific portion URL read fetch COG.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/dot-make_smips_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an SMIPS URL — .make_smips_url","text":"","code":".make_smips_url(.collection, .day)"},{"path":"https://aagi-aus.github.io/nert/reference/dot-make_smips_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an SMIPS URL — .make_smips_url","text":".collection user-supplied SMIPS collection asked . .day user-supplied date asked .","code":""},{"path":"https://aagi-aus.github.io/nert/reference/get_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or Set Up API Key for TERN — get_key","title":"Get or Set Up API Key for TERN — get_key","text":"Checks first get key .Rprofile .Renviron (similar) file. found, suggests setting .  Can used check key R using key wish using guidance setting keys.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/get_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or Set Up API Key for TERN — get_key","text":"","code":"get_key()"},{"path":"https://aagi-aus.github.io/nert/reference/get_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or Set Up API Key for TERN — get_key","text":"string value API key value.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/get_key.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get or Set Up API Key for TERN — get_key","text":"TERN creates API keys special characters include “/”, causes query fail. Currently, get_key() checks API_KEY string replaces “%2f” query work properly.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/get_key.html","id":"requesting-an-api-key","dir":"Reference","previous_headings":"","what":"Requesting an API Key","title":"Get or Set Up API Key for TERN — get_key","text":"request API key, go https://account.tern.org.au/authenticated_user/apikeys click \"Sign \" upper right corner. Sign proper credentials. , left-hand menu, click \"Create API Key\".  done, copy key put .Renviron using usethis::edit_r_environ TERN_API_KEY=\"your_api_key\". Restart R session query work. suggestion use .Renviron set API key. However, regularly interact APIs outside R using language may wish set .bashrc, .zshrc, config.fish cross-language use.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/get_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or Set Up API Key for TERN — get_key","text":"","code":"if (FALSE) { # \\dontrun{ get_key() } # }"},{"path":"https://aagi-aus.github.io/nert/reference/grain.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic dataset for a grain production experiment in South Australia — grain","title":"Synthetic dataset for a grain production experiment in South Australia — grain","text":"Data fabricated experiment investigating effects Nitrogen application seeding rate grain production crop, conducted across 10 fictional sites South Australia. variables follows: Site: experiment site locations. Latitude: Latitude site, recorded decimal degrees Northing. Longitude: Longitude site, decimal degrees Easting. SowDate: date crops sown. NitrogenDate: date Nitrogen treatments applied. Rep: Replicate number. (site 3 replicates.) Variety: anonymised variety (10 levels). Nitrogen_kgNha: applied Nitrogen rate treatment, kg N/ha. SeedRate_plantsm2: seeding rate, measured target establishment plants/m2. Yield_Tha: measured grain yield plot T/ha.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/grain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic dataset for a grain production experiment in South Australia — grain","text":"","code":"data(grain)"},{"path":"https://aagi-aus.github.io/nert/reference/grain.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic dataset for a grain production experiment in South Australia — grain","text":"data frame 2880 rows 10 variables","code":""},{"path":"https://aagi-aus.github.io/nert/reference/nert-package.html","id":null,"dir":"Reference","previous_headings":"","what":"nert: An API Client for TERN Data — nert-package","title":"nert: An API Client for TERN Data — nert-package","text":"Provides access Australia's TERN (Terrestrial Ecosystem Research Network) data API, https://tern.org.au.","code":""},{"path":[]},{"path":"https://aagi-aus.github.io/nert/reference/nert-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"nert: An API Client for TERN Data — nert-package","text":"Maintainer: Sam Rogers sam.rogers@adelaide.edu.au (ORCID) Authors: Adam H. Sparks adamhsparks@gmail.com (ORCID) Wasin Pipattungsakul wasin.pipattungsakul@adelaide.edu.au Russell Edson russell.edson@adelaide.edu.au (ORCID) Max Moldovan max.moldovan@adelaide.edu.au","code":""},{"path":"https://aagi-aus.github.io/nert/reference/read_smips.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SMIPS COGs from TERN — read_smips","title":"Read SMIPS COGs from TERN — read_smips","text":"Read Soil Moisture Integration Prediction System (SMIPS) Cloud Optimised Geotiff (COG) files TERN R session.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/read_smips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SMIPS COGs from TERN — read_smips","text":"","code":"read_smips(   day,   collection = \"totalbucket\",   api_key = get_key(),   max_tries = 3L,   initial_delay = 1L )"},{"path":"https://aagi-aus.github.io/nert/reference/read_smips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SMIPS COGs from TERN — read_smips","text":"day date query, e.g., day = \"2017-12-31\" day = .Date(\"2017-12-01\"), Character Date classes accepted. collection character vector “SMIPS” data collection queried: SMindex: SMIPS Soil Moisture Index (.e., number 0 1 indicates full SMIPS bucket moisture store relative 90 cm capacity), totalbucket: estimate volumetric soil moisture (mm) SMIPS bucket moisture store, Defaults “totalbucket”. Multiple collections supported, e.g., collection = c(\"SMindex\", \"totalbucket\"). api_key character string containing API key, random string provided TERN, request. Defaults automatically detecting key local .Renviron, .Rprofile similar.  Alternatively, may directly provide key string use functionality like keyring.  nothing provided, prompted set R session auto-detected browser window open TERN website request key. max_tries integer Integer number times retry failed download emitting error message.  Defaults 3. initial_delay Integer number seconds delay retrying download.  increases tries increment.  Defaults 1.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/read_smips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SMIPS COGs from TERN — read_smips","text":"terra::rast object","code":""},{"path":"https://aagi-aus.github.io/nert/reference/read_smips.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read SMIPS COGs from TERN — read_smips","text":"https://portal.tern.org.au/metadata/TERN/d1995ee8-53f0-4a7d-91c2-ad5e4a23e5e0 https://geonetwork.tern.org.au/geonetwork/srv/eng/catalog.search#/metadata/d1995ee8-53f0-4a7d-91c2-ad5e4a23e5e0","code":""},{"path":"https://aagi-aus.github.io/nert/reference/read_smips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read SMIPS COGs from TERN — read_smips","text":"","code":"if (FALSE) { # interactive()  r <- read_smips(\"2024-01-01\")  # `tidyterra::autoplot` is re-exported for convenience autoplot(r) }"},{"path":"https://aagi-aus.github.io/nert/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. tidyterra autoplot","code":""}]
