[{"path":"https://aagi-aus.github.io/nert/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 nert authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://aagi-aus.github.io/nert/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adam H. Sparks. Maintainer. Wasin Pipattungsakul. Author. Russell Edson. Author. Sam Rogers. Author. Max Moldovan. Contributor.","code":""},{"path":"https://aagi-aus.github.io/nert/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sparks , Pipattungsakul W, Rogers S, Edson R, Moldovan M (2024). nert: API Client TERN Data.","code":"@Manual{,   author = {Adam H. Sparks and Wasin Pipattungsakul and Sam Rogers and Russell Edson and Max Moldovan},   title = {nert: An API Client for TERN Data},   year = {2024}, }"},{"path":"https://aagi-aus.github.io/nert/index.html","id":"nert","dir":"","previous_headings":"","what":"An API Client for TERN Data","title":"An API Client for TERN Data","text":"goal {nert} provide access Australian TERN (Terrestrial Ecosystem Research Network) data R session.","code":""},{"path":"https://aagi-aus.github.io/nert/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An API Client for TERN Data","text":"can install development version {nert} GitHub :","code":"if (!require(\"pak\")) {   install.packages(\"pak\") }  pak::pak(\"AAGI-AUS/nert\")"},{"path":"https://aagi-aus.github.io/nert/index.html","id":"example-reading-a-cog-as-a-spatial-object","dir":"","previous_headings":"","what":"Example: reading a COG as a spatial object","title":"An API Client for TERN Data","text":"basic example shows can fetch one day’s data SMIPS data (currently supported data set TERN) visualise :","code":"library(nert) #>  #> Attaching package: 'nert' #> The following object is masked from 'package:graphics': #>  #>     plot #> The following object is masked from 'package:base': #>  #>     plot r <- read_smips(day = \"2024-01-01\")  plot(r)"},{"path":"https://aagi-aus.github.io/nert/index.html","id":"extract-values-given-latlon-values","dir":"","previous_headings":"","what":"Extract Values Given Lat/Lon Values","title":"An API Client for TERN Data","text":"Extract Soil Moisture Corrigin Merriden, WA Tamworth, NSW given latitude longitude values .","code":"library(terra) #> terra 1.7.78 df <- structure(   list(     location = c(\"Corrigin\", \"Merredin\", \"Tamworth\"),     x = c(117.87, 118.28, 150.84),     y = c(-32.33, -31.48, -31.07)   ),   row.names = c(NA, -3L),   class = \"data.frame\" )  cog_df <- extract(x = r, y = df[, c(\"x\", \"y\")], xy = TRUE)  cog_df <- cbind(df$location, cog_df) names(cog_df) <- c(\"location\", \"ID\", \"smips_totalbucket_mm_20240101\", \"x\", \"y\") cog_df #>   location ID smips_totalbucket_mm_20240101        x         y #> 1 Corrigin  1                    0.06715473 117.8688 -32.33328 #> 2 Merredin  2                    0.22716530 118.2787 -31.48353 #> 3 Tamworth  3                   93.44989014 150.8408 -31.07365"},{"path":"https://aagi-aus.github.io/nert/reference/get_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or Set Up API Key for TERN — get_key","title":"Get or Set Up API Key for TERN — get_key","text":"Checks first get key .Rprofile .Renviron (similar) file. found, suggests setting .  Can used check key R using key wish using guidance setting keys.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/get_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or Set Up API Key for TERN — get_key","text":"","code":"get_key()"},{"path":"https://aagi-aus.github.io/nert/reference/get_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or Set Up API Key for TERN — get_key","text":"string value API key value.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/get_key.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get or Set Up API Key for TERN — get_key","text":"TERN creates API keys special characters include “/”, causes query fail. Currently, get_key() checks API_KEY string replaces “%2f” query work properly.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/get_key.html","id":"requesting-an-api-key","dir":"Reference","previous_headings":"","what":"Requesting an API Key","title":"Get or Set Up API Key for TERN — get_key","text":"request API key, go https://account.tern.org.au/authenticated_user/apikeys click \"Sign \" upper right corner. Sign proper credentials. , left-hand menu, click \"Create API Key\".  done, copy key put .Renviron using usethis::edit_r_environ TERN_API_KEY=\"your_api_key\". Restart R session query work. suggestion use .Renviron set API key. However, regularly interact APIs outside R using language may wish set .bashrc, .zshrc, config.fish cross-language use.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/get_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or Set Up API Key for TERN — get_key","text":"","code":"if (FALSE) { # \\dontrun{ get_key() } # }"},{"path":"https://aagi-aus.github.io/nert/reference/nert-package.html","id":null,"dir":"Reference","previous_headings":"","what":"nert: An API Client for TERN Data — nert-package","title":"nert: An API Client for TERN Data — nert-package","text":"Provides access Australia's TERN (Terrestrial Ecosystem Research Network) data API, https://tern.org.au.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/nert-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"nert: An API Client for TERN Data — nert-package","text":"Maintainer: Adam H. Sparks adamhsparks@gmail.com (ORCID) Authors: Wasin Pipattungsakul wasin.pipattungsakul@adelaide.edu.au Russell Edson russell.edson@adelaide.edu.au (ORCID) Sam Rogers sam.rogers@adelaide.edu.au (ORCID) contributors: Max Moldovan max.moldovan@adelaide.edu.au [contributor]","code":""},{"path":"https://aagi-aus.github.io/nert/reference/read_smips.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SMIPS COGs from TERN — read_smips","title":"Read SMIPS COGs from TERN — read_smips","text":"Read Soil Moisture Integration Prediction System (SMIPS) Cloud Optimised Geotiff (COG) files TERN R session.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/read_smips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SMIPS COGs from TERN — read_smips","text":"","code":"read_smips(   collection = \"totalbucket\",   day,   api_key = get_key(),   max_tries = 3L,   initial_delay = 1L )"},{"path":"https://aagi-aus.github.io/nert/reference/read_smips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SMIPS COGs from TERN — read_smips","text":"collection character vector “SMIPS” data collection queried: SMindex bucket1 bucket2 deepD runoff totalbucket Defaults “totalbucket”. Multiple collections supported, e.g., collection = c(\"SMindex\", \"totalbucket\"). day date query, e.g., day = \"2017-12-31\" day = .Date(\"2017-12-01\"), Character Date classes accepted. api_key character string containing API key, random string provided TERN, request. Defaults automatically detecting key local .Renviron, .Rprofile similar.  Alternatively, may directly provide key string use functionality like keyring.  nothing provided, prompted set R session auto-detected browser window open TERN website request key. max_tries integer Integer number times retry failed download emitting error message.  Defaults 3. initial_delay Integer number seconds delay retrying download.  increases tries increment.  Defaults 1.","code":""},{"path":"https://aagi-aus.github.io/nert/reference/read_smips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SMIPS COGs from TERN — read_smips","text":"terra::rast object","code":""},{"path":"https://aagi-aus.github.io/nert/reference/read_smips.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read SMIPS COGs from TERN — read_smips","text":"https://portal.tern.org.au/metadata/TERN/d1995ee8-53f0-4a7d-91c2-ad5e4a23e5e0https://geonetwork.tern.org.au/geonetwork/srv/eng/catalog.search#/metadata/d1995ee8-53f0-4a7d-91c2-ad5e4a23e5e0","code":""},{"path":"https://aagi-aus.github.io/nert/reference/read_smips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read SMIPS COGs from TERN — read_smips","text":"","code":"if (FALSE) { # interactive()  r <- read_smips(day = \"2024-01-01\")  # terra::plot() is re-exported for convenience plot(r) }"},{"path":"https://aagi-aus.github.io/nert/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. terra plot","code":""}]
